// frontend/src/components/Breadcrumbs.jsx
import React from "react";
import { useLocation, useNavigate } from "react-router-dom"; // ** –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π
import { Breadcrumb, BreadcrumbItem, BreadcrumbLink } from "@chakra-ui/react"; // ** –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫ –∏–∑ Chakra UI
import { ChevronRightIcon } from "@chakra-ui/icons"; // ** –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è

// ## –ú–∞–ø–ø–∏–Ω–≥ URL-—Å–µ–≥–º–µ–Ω—Ç–æ–≤ –≤ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
const breadcrumbNameMap = {
  admin: "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
  products: "–¢–æ–≤–∞—Ä—ã",
  about: "–û –∫–æ–º–ø–∞–Ω–∏–∏",
  collaboration: "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ",
  contacts: "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
  reviews: "–û—Ç–∑—ã–≤—ã",
  payment: "–û–ø–ª–∞—Ç–∞",
  faq: "–í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç",
  edit: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
};

export default function Breadcrumbs() {
  const location = useLocation(); // ** –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL
  const navigate = useNavigate(); // ** –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–∞—Ä—à—Ä—É—Ç–∞–º

  // ## –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –Ω–∞ —Å–µ–≥–º–µ–Ω—Ç—ã, –∏—Å–∫–ª—é—á–∞—è –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
  const pathnames = location.pathname.split("/").filter((segment) => segment);
  console.log("üöÄ ~ Breadcrumbs ~ pathnames:", pathnames);

  // ## –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫ —Å —ç–ª–µ–º–µ–Ω—Ç–∞ "–ì–ª–∞–≤–Ω–∞—è"
  const crumbs = [
    {
      name: "–ì–ª–∞–≤–Ω–∞—è",
      path: "/",
    },
  ];

  // ## –°–æ–∑–¥–∞–µ–º –∫—É–º—É–ª—è—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
  let cumulativePath = "";
  pathnames.forEach((segment) => {
    cumulativePath += `/${segment}`;
    // ** –ï—Å–ª–∏ –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–∞ –µ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –º–∞–ø–ø–∏–Ω–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ; –∏–Ω–∞—á–µ –¥–µ–ª–∞–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∑–∞–≥–ª–∞–≤–Ω–æ–π
    const displayName =
      breadcrumbNameMap[segment] ||
      segment.charAt(0).toUpperCase() + segment.slice(1);
    crumbs.push({
      name: displayName,
      path: cumulativePath,
    });
  });

  return (
    <Breadcrumb spacing="8px" separator={<ChevronRightIcon color="gray.500" />}>
      {crumbs.map((crumb, index) => {
        const isLast = index === crumbs.length - 1;
        return (
          <BreadcrumbItem key={crumb.path} isCurrentPage={isLast}>
            {isLast ? (
              <BreadcrumbLink>{crumb.name}</BreadcrumbLink> // ** –ü–æ—Å–ª–µ–¥–Ω—è—è –∫—Ä–æ—à–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –±–µ–∑ onClick
            ) : (
              <BreadcrumbLink onClick={() => navigate(crumb.path)}>
                {crumb.name}
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        );
      })}
    </Breadcrumb>
  );
}
